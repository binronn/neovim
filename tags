!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	k,class	/vim9script classes/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Zsh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Zsh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Zsh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Zsh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	1.1	/current.age/
!_TAG_PARSER_VERSION!Zsh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/byron/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e31feb0/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Zsh!function	autoloaded	/function name passed to autoload built-in command/
!_TAG_ROLE_DESCRIPTION!Zsh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Zsh!script	autoloaded	/autoloaded/
!_TAG_ROLE_DESCRIPTION!Zsh!script	loaded	/loaded/
<cr>	/home/byron/.config/nvim/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<plug>(plug-preview)	/home/byron/.config/nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
D	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
GenerateSepctorForCpp	/home/byron/.config/nvim/vim/plugins_init.vim	/^function GenerateSepctorForCpp()$/;"	f
GenerateSepctorForPython	/home/byron/.config/nvim/vim/plugins_init.vim	/^function GenerateSepctorForPython()$/;"	f
L	/home/byron/.config/nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	/home/byron/.config/nvim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
Plug	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	/home/byron/.config/nvim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	/home/byron/.config/nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
R	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
S	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
U	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	/home/byron/.config/nvim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
UpdateCStags	/home/byron/.config/nvim/vim/plugins_init.vim	/^function UpdateCStags()$/;"	f
UpdateCtags	/home/byron/.config/nvim/vim/plugins_init.vim	/^function UpdateCtags()$/;"	f
X	/home/byron/.config/nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
["<C-a>"]	/home/byron/.config/nvim/lua/common_func.lua	/^                ["<C-a>"] = function(prompt_bufnr)$/;"	f
[[	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
]]	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
async_command	/home/byron/.config/nvim/lua/common_func.lua	/^local function async_command(cmd, callback)$/;"	f
autocmd	/home/byron/.config/nvim/lua/nv_utils.lua	/^local function autocmd(...)$/;"	f
build_project	/home/byron/.config/nvim/lua/autocmd.lua	/^function build_project(compile_command)$/;"	f
build_project_bin	/home/byron/.config/nvim/lua/autocmd.lua	/^function build_project_bin()$/;"	f
build_project_sym	/home/byron/.config/nvim/lua/autocmd.lua	/^function build_project_sym()$/;"	f
callback	/home/byron/.config/nvim/lua/autocmd.lua	/^    callback = function()$/;"	f
callback	/home/byron/.config/nvim/lua/autocmd.lua	/^  callback = function()$/;"	f
callback	/home/byron/.config/nvim/lua/dap_cpp.lua	/^  callback = function()$/;"	f
callback	/home/byron/.config/nvim/lua/plugins.lua	/^  callback = function()$/;"	f
check_back_space	/home/byron/.config/nvim/lua/coc_init.lua	/^function _G.check_back_space()$/;"	f	unknown:_G
clear_debug_keymaps	/home/byron/.config/nvim/lua/dap_cpp.lua	/^local function clear_debug_keymaps()$/;"	f
cmap	/home/byron/.config/nvim/lua/keymaps.lua	/^function cmap(shortcut, command)$/;"	f
config	/home/byron/.config/nvim/lua/plugins.lua	/^            config = function()$/;"	f
config	/home/byron/.config/nvim/lua/plugins.lua	/^          config = function()$/;"	f
config	/home/byron/.config/nvim/lua/plugins.lua	/^      config = function()$/;"	f
custom_filter	/home/byron/.config/nvim/lua/plugins.lua	/^    custom_filter = function(bufnr)$/;"	f
d	/home/byron/.config/nvim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	/home/byron/.config/nvim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
dd	/home/byron/.config/nvim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
diagnostics_indicator	/home/byron/.config/nvim/lua/plugins.lua	/^    diagnostics_indicator = function(count, level, diagnostics_dict, context)$/;"	f
error_msg	/home/byron/.config/nvim/plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
event_exited['dapui_config']	/home/byron/.config/nvim/lua/dap_cpp.lua	/^dap.listeners.before.event_exited['dapui_config'] = function()$/;"	f	unknown:dap.listeners.before
event_initialized['dapui_config']	/home/byron/.config/nvim/lua/dap_cpp.lua	/^dap.listeners.after.event_initialized['dapui_config'] = function()$/;"	f	unknown:dap.listeners.after
event_terminated['dapui_config']	/home/byron/.config/nvim/lua/dap_cpp.lua	/^dap.listeners.before.event_terminated['dapui_config'] = function()$/;"	f	unknown:dap.listeners.before
expand	/home/byron/.config/nvim/lua/plugins.lua	/^    expand = function(args)$/;"	f
filetypedetect	/home/byron/.config/nvim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
format	/home/byron/.config/nvim/lua/plugins.lua	/^    format = function(diagnostic)$/;"	f
g:_plug_bang	/home/byron/.config/nvim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:clang_format#detect_style_file	/home/byron/.config/nvim/vim/plugins_init.vim	/^let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#style_options	/home/byron/.config/nvim/vim/plugins_init.vim	/^let g:clang_format#style_options = {$/;"	v
g:loaded_plug	/home/byron/.config/nvim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:plug_home	/home/byron/.config/nvim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	/home/byron/.config/nvim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	/home/byron/.config/nvim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	/home/byron/.config/nvim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	/home/byron/.config/nvim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
generate_ctags	/home/byron/.config/nvim/lua/common_func.lua	/^local function generate_ctags()$/;"	f
get_visual_selection	/home/byron/.config/nvim/lua/common_func.lua	/^local function get_visual_selection()$/;"	f
imap	/home/byron/.config/nvim/lua/keymaps.lua	/^function imap(shortcut, command)$/;"	f
instant_prompt_example	/home/byron/.config/nvim/terminal/.p10k.zsh	/^  function instant_prompt_example() {$/;"	f
live_grep_args_with_quotes	/home/byron/.config/nvim/lua/common_func.lua	/^local function live_grep_args_with_quotes()$/;"	f
map	/home/byron/.config/nvim/lua/keymaps.lua	/^function map(mode, shortcut, command)$/;"	f
my_git_formatter	/home/byron/.config/nvim/terminal/.p10k.zsh	/^  function my_git_formatter() {$/;"	f
nmap	/home/byron/.config/nvim/lua/keymaps.lua	/^function nmap(shortcut, command)$/;"	f
nmap2	/home/byron/.config/nvim/lua/keymaps.lua	/^local function nmap2(key, cmd, opts)$/;"	f
o	/home/byron/.config/nvim/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
on_attach	/home/byron/.config/nvim/lua/plugins.lua	/^  on_attach = function(client, bufnr)$/;"	f
on_exit	/home/byron/.config/nvim/lua/common_func.lua	/^    on_exit = function(_, exit_code, _)$/;"	f
plug#	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	/home/byron/.config/nvim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
program	/home/byron/.config/nvim/lua/dap_cpp.lua	/^    program = function()$/;"	f
prompt_example	/home/byron/.config/nvim/terminal/.p10k.zsh	/^  function prompt_example() {$/;"	f
pythonPath	/home/byron/.config/nvim/lua/dap_cpp.lua	/^    pythonPath = function()$/;"	f
q	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :call <SID>close_pane()<cr>$/;"	m
q	/home/byron/.config/nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
reset_workspace_dir	/home/byron/.config/nvim/lua/common_func.lua	/^local function reset_workspace_dir()$/;"	f
run	/home/byron/.config/nvim/lua/plugins.lua	/^        run = function() require('nvim-treesitter.install').update({ with_sync = true }) end,$/;"	f
s:TYPE	/home/byron/.config/nvim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:append_ul	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:ask	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assign_name	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:bang	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base_spec	/home/byron/.config/nvim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:batchfile	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:check_ruby	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checkout	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chsh	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:close_pane	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:close_pane()$/;"	f
s:compare_git_uri	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:cpo_save	/home/byron/.config/nvim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:define_commands	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:delete	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete_op	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:diff	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:dirpath	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:do	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doautocmd	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:err	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:esc	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escrtp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:extract_name	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:find_name	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:finish	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_rtp	/home/byron/.config/nvim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:format_git_log	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:git_dir	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_validate	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:hash_match	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:infer_properties	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:install	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:is_local_plug	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_powershell	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
s:is_preview_window_open	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_updated	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_win	/home/byron/.config/nvim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:isabsolute	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:job_abort	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:last_non_empty_line	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_rtp	/home/byron/.config/nvim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:lastline	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:lazy	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lines	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:load_plugin	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	/home/byron/.config/nvim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logpos	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	/home/byron/.config/nvim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:me	/home/byron/.config/nvim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:names	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:new_window	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:nvim	/home/byron/.config/nvim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:parse_options	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:path	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:plug_buf	/home/byron/.config/nvim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	/home/byron/.config/nvim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	/home/byron/.config/nvim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:prepare	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:preview_commit	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:progress_bar	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:reap	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:regress_bar	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reload_plugins	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_rtp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:retry	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:revert	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rm_rf	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rtp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:section	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:shellesc_cmd	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_ps1	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:snapshot	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:source	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:spawn	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:split_rtp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:status	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:switch_in	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syntax	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system_chomp	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:tick	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:to_a	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:triggers	/home/byron/.config/nvim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:update	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_finish	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_python	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_vim	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:version_requirement	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vim8	/home/byron/.config/nvim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:warn	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:with_cd	/home/byron/.config/nvim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:wrap_cmds	/home/byron/.config/nvim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
save_profiles	/home/byron/.config/nvim/plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
set -g message-style "bg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -g message-style "bg=#00346e, fg=#ffffd7"        # tomorrow night blue, base3$/;"	k
set -g status-style "bg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -g status-style "bg=#00346e, fg=#ffffd7"   # tomorrow night blue, base3$/;"	k
set -wg pane-active-border-style "fg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -wg pane-active-border-style "fg=blue"$/;"	k
set -wg pane-border-style "fg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -wg pane-border-style "fg=#585858"       # base01$/;"	k
set -wg window-status-current-style "bg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -wg window-status-current-style "bg=#00afff" # red$/;"	k
set -wg window-status-last-style "fg	/home/byron/.config/nvim/terminal/.tmux.conf	/^set -wg window-status-last-style "fg=#00afff"$/;"	k
set_filetype_keymaps	/home/byron/.config/nvim/lua/nv_utils.lua	/^local function set_filetype_keymaps(ft, map_cmd, lhs, rhs, opts)$/;"	f
setup_debug_keymaps	/home/byron/.config/nvim/lua/dap_cpp.lua	/^local function setup_debug_keymaps()$/;"	f
show_docs	/home/byron/.config/nvim/lua/coc_init.lua	/^function _G.show_docs()$/;"	f	unknown:_G
switch_file_and_search	/home/byron/.config/nvim/lua/plugins.lua	/^function switch_file_and_search()$/;"	f
time	/home/byron/.config/nvim/plugin/packer_compiled.lua	/^  time = function(chunk, start) end$/;"	f
time	/home/byron/.config/nvim/plugin/packer_compiled.lua	/^  time = function(chunk, start)$/;"	f
try_loadstring	/home/byron/.config/nvim/plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
vmap	/home/byron/.config/nvim/lua/keymaps.lua	/^function vmap(shortcut, command)$/;"	f
vmap2	/home/byron/.config/nvim/lua/keymaps.lua	/^local function vmap2(key, cmd, opts)$/;"	f
vmap2x	/home/byron/.config/nvim/lua/keymaps.lua	/^local function vmap2x(keys, command, opts)$/;"	f
workspace_dir	/home/byron/.config/nvim/lua/common_func.lua	/^local function workspace_dir()$/;"	f
workspace_dir2	/home/byron/.config/nvim/lua/common_func.lua	/^local function workspace_dir2()$/;"	f
xmap	/home/byron/.config/nvim/lua/keymaps.lua	/^function xmap(shortcut, command)$/;"	f
